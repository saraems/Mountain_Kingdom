{"version":3,"sources":["components/Header/Header.js","components/Main/Main.js","components/Footer/Footer.js","components/LogIn/Login.js","components/Home/Home.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Main","onClick","this","props","enter","id","Footer","Login","onChange","login","type","placeholder","password","submit","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","target","value","preventDefault","method","headers","Content-Type","Access-Control-Allow-Origin","body","queryString","stringify","fetch","then","res","json","data","console","log","catch","err","document","querySelector","style","display","enterTheGates","state","Fragment","components_Header_Header","components_Main_Main","components_Footer_Footer","components_LogIn_Login","App","components_Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.386ab56c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    return (\n        <header>\n          <nav>\n            <div className=\"mobile_nav\">\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n            <ul className=\"nav\">\n              <li>About</li>\n              <li>Offer</li>\n              <li>\n                <h1><i className=\"far fa-circle\"></i></h1>\n              </li>\n              <li className='li_right'>Gallery</li>\n              <li className='li_right'>Contact</li>\n            </ul>\n          </nav>\n        </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './Main.css';\n\nclass Main extends Component {\n  render() {\n    return (\n        <main>\n          <section>\n            <h2>Mountain Kingdom</h2>\n          </section>\n          <section className=\"login_container\">\n            <button onClick={ this.props.enter } className=\"login_btn\" id=\"logn_btn\">Enter the gates</button>\n          </section>\n        </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n        <footer>\n          <section className=\"copy_rights_container\">\n            <div className=\"copy_rights\">\n              &copy;2019 Mountain kingdom\n            </div>\n          </section>\n          <section className=\"privacy_container\">\n            <div className=\"privacy\">\n              Cookies | Privacy\n            </div>\n          </section>\n          <section className=\"designed_by_container\">\n            <div className=\"designed_by\">\n              Design by <span className=\"designed_by_author\">Wizard of Oz</span>\n            </div>\n          </section>\n        </footer>\n    );\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react';\nimport './Login.css';\n\nclass Login extends Component {\n  render() {\n    return (\n        <div className=\"login_subpage\">\n          <div className=\"login_window\">\n                <div>Are you a Mountain Knight?</div>\n                <input onChange={ this.props.login } type=\"email\" placeholder=\"Email\"/>\n                <input onChange={ this.props.password } type=\"password\" placeholder=\"Password\"/>\n                <button onClick={ this.props.submit } className=\"login_btn btn_post\">Log in</button>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport './Home.css';\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Footer from \"../Footer/Footer\";\nimport Login from \"../LogIn/Login\";\nimport queryString from 'query-string';\n\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n            password: ''\n        }\n    }\n\n\n    login = (e) => {\n      this.setState({\n          login: e.target.value\n      })\n    };\n\n    password = (e) => {\n      this.setState({\n          password: e.target.value\n      })\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n\n        let login = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: queryString.stringify({\n                \"login\": \"correct_login@example.com\",\n                \"password\": \"C0rr3Ct_P@55w0rd\"\n            })\n        };\n\n        fetch('https://recruitment-api.pyt1.stg.jmr.pl/login',login)\n            .then(res => res.json())\n            .then(data => console.log(data))\n            .catch(err => console.log(err));\n\n        document.body.querySelector('.login_subpage').style.display = \"none\"\n\n    };\n\n\n    enterTheGates = () => {\n        document.body.querySelector('.login_subpage').style.display = \"flex\"\n    };\n\n  render() {\n    return (\n      <React.Fragment>\n          <Header/>\n          <Main enter={ this.enterTheGates }/>\n          <Footer/>\n          <Login login={ this.login } password={ this.password } submit={ this.submit }/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from \"../Home/Home\"\n\n\nclass App extends Component {\n  render() {\n    return (\n          <Home/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}